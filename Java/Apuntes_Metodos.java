/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package cursojava;

/**
 *
 * @author minis
 */
public class Apuntes_Metodos {
   
/*
 * M√©todo = Un m√©todo es una acci√≥n o comportamiento de los objetos
 * Par√°metro = Son para la declaraci√≥n de los m√©todos
 * Argumentos son para la invocaci√≥n de los m√©todos
 * M√©todo "void" no retona nada
 * M√©todo "Int" nos retorna la funci√≥n a realizar
 * M√©todo String" Nos retorna una cadena (Caracteres)
 */ 
    

/*El m√©todo  ùëöùëéùëñùëõ(), tiene que estar declarado dentro de una clase.

ùëùùë¢ùëèùëôùëñùëê : cada m√©todo en una clase puede ser p√∫blico, protegido o privado dependiendo del nivel de acceso que el programador 
quiere darle. ‚Äú ùëùùë¢ùëèùëôùëñùëê ‚Äù significa que el m√©todo puede ser accedido desde cualquier otro m√©todo que tenga una instancia de 
esta clase, ‚Äú ùëùùëüùëúùë°ùëíùëêùë°ùëíùëë ‚Äù quiere decir que el m√©todo s√≥lo puede ser accedido desde dentro de la misma clase y desde clases 
derivadas de la clase donde se ha declarado y ‚Äú ùëùùëüùëñùë£ùëéùë°ùëí ‚Äù quiere decir que el m√©todo s√≥lo puede ser accedido desde dentro de 
la misma clase.
    
ùë†ùë°ùëéùë°ùëñùëê : un m√©todo puede ser de instancia o de clase. Un m√©todo NO est√°tico es un m√©todo de instancia (que necesita una instancia 
de la clase donde se declara para ser invocado) y un m√©todo est√°tico es un m√©todo de clase (s√≥lo se necesita invocarlo dada la 
clase, no un objeto de dicha clase).
    
ùë£ùëúùëñùëë : Los m√©todos pueden devolver algo, por ejemplo, un m√©todo que suma dos n√∫meros, devuelve el resultado de la suma; pero 
hay m√©todos que no devuelven nada y que s√≥lo ejecutan acciones. Dichos m√©todos se declaran con la palabra reservada ‚Äú ùë£ùëúùëñùëë ‚Äù 
(vac√≠o) como tipo de retorno.
    
ùëöùëéùëñùëõ : Es el nombre del m√©todo que la m√°quina virtual de Java busca para comenzar a ejecutar un programa. Todos los m√©todos 
tienen un nombre.
    
ùëÜùë°ùëüùëñùëõùëî : Es una clase que define cadenas de caracteres. Gracias a la clase String, Java puede manipular textos.  
ùëÜùë°ùëüùëñùëõùëîùë†=‚Äúùêªùëúùëôùëéùëöùë¢ùëõùëëùëú‚Äù define una cadena.
    
ùëÜùë°ùëüùëñùëõùëî []: Cualquier clase que se declara con corchetes ‚Äú[]‚Äù, quiere decir que lo que tienes no es una instancia de esa clase, 
sino un array de objetos de dicha clase. Ejemplo: ùëÜùë°ùëüùëñùëõùëî[]ùëöùëíùë†ùëíùë†; contendr√≠a los nombres de los meses del a√±o. El m√©todo main() 
de Java necesita un String[] porque el usuario de nuestro programa puede pasar par√°metros extra desde la l√≠nea de comando a 
nuestro programa. Esos par√°metros, el programador los recibe a trav√©s de ese array.
     
     */
 //Metodo principal, en este caso no hemos llamado a ning√∫n metodo, no hay nada dentro de las llaves solo imprimir

    void Hola() {
        
        
//System.out.print("Hola Mundo");//debemos acabar con ;
        System.out.println("Hola Mundo");//imprime el texto especificado dentro de los par√©ntesis en la pantalla  ;

    }

    
     /*Definici√≥n de propiedades--> Caracter√≠rticas del elemento que describimos con la clase
      Definici√≥n de los m√©todos--> Comportamiento y funcionalidades del elemento
     */
    public static void main(String[] args) {
        // Funci√≥n principal, todo el c√≥digo empezar√° desde el main
        Apuntes_Metodos objeto = new Apuntes_Metodos();
        objeto.Hola();

    }
}
